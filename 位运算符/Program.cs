namespace 位运算符
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("位运算符");
            // 主要针对数值类型
            // 将数值转为二进制 在进行位运算

            #region 位与 &
            // 连接两个数值进行位计算 将数值转为二进制
            // 对位运算 有0则0
            int a = 1; // 001
            int b = 5; // 101
            // 不能单独写 如 a & b
            // 对位运算 有0则0：
            // 001
            // 101
            // 001
            int c = a & b;
            Console.WriteLine(c); // 001 输出十进制 1

            a = 3; // 011
            b = 19;// 10011
            c = a & b; // 00011 
            Console.WriteLine(c); // 输出3

            // 多个数值进行位运算 没有括号时从左向右依次计算
            a = 1; // 001
            b = 5; // 101
            c = 19;// 10011
            int d = a & b & c; //001
            Console.WriteLine(d); // 1
            #endregion

            #region 位或 |
            // 连接两个数值进行位运算 将数值转为二进制
            // 对位运算 有1则1
            a = 1; // 001
            b = 3; // 011
            c = a | b; // 011
            Console.WriteLine(c); // 输出3

            a = 5; // 101
            b = 10; // 1010
            c = 20; // 10100
            d = a | b | c; // 11111
            Console.WriteLine(d); // 31
            #endregion

            #region 异或 ^
            // 连接两个数值进行位运算 将数值转为二进制
            // 对位运算 相同为0 不同为1
            a = 1; // 001
            b = 5; // 101
            Console.WriteLine(a ^ b); // 4
            #endregion

            #region 位取反
            // 写在数值前面 将数值转为二进制
            // 对位运算 0变1 1变0
            a = 5; // 0101
            c = ~a; // 010
            // 取反时应写出完整二进制，变量a是int类型，4字节8位，共32位，完整二进制为：
            // 0000 0000 0000 0000 0000 0000 0000 0101 取反后：
            // 1111 1111 1111 1111 1111 1111 1111 1010
            // int为有符号整型，因此以上为负数的二进制，转十进制需先反码再补码
            // 反码：将原式所有位取反
            // 0000 0000 0000 0000 0000 0000 0000 0101
            // 补码：在反码的基础上+1得：
            // 0000 0000 0000 0000 0000 0000 0000 0110
            // 对补码转十进制得6，因int类型有符号，对6取负数，结果为-6
            Console.WriteLine(c); // -6
            #endregion

            #region 左移<< 右移>>
            // 让一个数的二进制数左移或右移
            // 左移几位 右侧加几个0
            // 右移几位 右侧去掉几个数
            a = 5; //101
            c = a << 5; // 左移5位 10100000
            Console.WriteLine(c); // 160

            a = 5; // 101
            c = a >> 2; // 1
            Console.WriteLine(c); // 1
            #endregion
        }
    }
}
